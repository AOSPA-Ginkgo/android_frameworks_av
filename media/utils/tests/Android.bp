package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "frameworks_av_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["frameworks_av_license"],
}

// general test config
cc_defaults {
    name: "libmediautils_tests_config",

    host_supported: true,

    cflags: [
        "-Wall",
        "-Werror",
        "-Wextra",
    ],

    sanitize: {
        address: true,
        cfi: true,
        integer_overflow: true,
        memtag_heap: true,
    },
}

cc_defaults {
    name: "libmediautils_tests_defaults",

    defaults: ["libmediautils_tests_config"],

    host_supported: true,

    shared_libs: [
        "liblog",
        "libutils",
    ],

    static_libs: [
        "libmediautils_core",
    ],
}

cc_defaults {
    name: "libmediautils_tests_host_unavail",

    defaults: ["libmediautils_tests_config"],

    host_supported: false,

   shared_libs: [
        "liblog",
        "libmediautils",
        "libutils",
    ],
}

cc_test_library {
    name: "libsharedtest",

    defaults: ["libmediautils_tests_defaults"],

    srcs: [
        "sharedtest.cpp",
    ],
}

cc_test {
    name: "library_tests",

    defaults: ["libmediautils_tests_defaults"],

    data_libs: [
        "libsharedtest",
    ],

    shared_libs: [
        "libbase",
    ],

    srcs: [
        "library_tests.cpp",
    ],
}

cc_test {
    name: "libmediautils_test",

    defaults: ["libmediautils_tests_host_unavail"],

    shared_libs: [
        "libmediautils",
    ],

    srcs: [
        "memory-test.cpp",
        "TimerThread-test.cpp",
    ],
}

cc_test {
    name: "media_process_tests",

    defaults: ["libmediautils_tests_host_unavail"],

    srcs: [
        "media_process_tests.cpp",
    ],
}

cc_test {
    name: "media_synchronization_tests",

    defaults: ["libmediautils_tests_host_unavail"],

    srcs: [
        "media_synchronization_tests.cpp",
    ],
}

cc_test {
    name: "media_threadsnapshot_tests",

    defaults: ["libmediautils_tests_host_unavail"],

    srcs: [
        "media_threadsnapshot_tests.cpp",
    ],
}

cc_test {
    name: "mediautils_scopedstatistics_tests",

    defaults: ["libmediautils_tests_defaults"],

    shared_libs: [
        "libaudioutils",
    ],

    srcs: [
        "mediautils_scopedstatistics_tests.cpp",
    ],
}

cc_test {
    name: "methodstatistics_tests",

    defaults: ["libmediautils_tests_defaults"],

    shared_libs: [
        "libaudioutils",
    ],

    srcs: [
        "methodstatistics_tests.cpp",
    ],
}

cc_test {
    name: "timecheck_tests",

    defaults: ["libmediautils_tests_host_unavail"],

    srcs: [
        "timecheck_tests.cpp",
    ],
}

cc_test {
    name: "extended_accumulator_tests",

    defaults: ["libmediautils_tests_defaults"],

    srcs: [
        "extended_accumulator_tests.cpp",
    ],
}
